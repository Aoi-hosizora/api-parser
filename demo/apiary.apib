FORMAT: 1A
HOST: localhost:3344/

# DemoApi

This is a demo api

> Version: 1.1
>
> [Terms of services](xxx)
>
> License: [MIT](xxx)
>
> Contact: [xxx](xxx) - xxx

# Group User

## User's subscribers [/v1/user/{uid}/subscriber]

GET - User's subscribers (Query user's subscribers, return page data)

+ Request Parameter

    + path: `uid` (integer) required - user id (not empty) (default: 1)
    + query: `page` (integer) not required - page (allow empty) (default: 1)

+ Response 200 Header

    + `a` (string)

+ Response 400

    + "request param error"

+ Response 404

    + "user not found"

### User's subscribers [GET]

+ Request 200

    + Headers

            a: b
            Content-Type: application/json

    + Body

            {
                "c": "d",
                "e": "f"
            }

+ Response 200

    + Headers

            a: b

            Content-Type: application/json; charset=utf-8

    + Body

            {
                "code": 200,
                "message": "success",
                "data": {
                    "count": 1,
                    "page": 1,
                    "data": [
                        {
                            "uid": 1,
                            "username": "TestUserName",
                            "profile": "TestProfile"
                        }
                    ]
                }
            }

+ Response 400

    + Headers

            Content-Type: application/json; charset=utf-8

    + Body

            {
                "code": 400,
                "message": "request param error"
            }

+ Response 404

    + Headers

            Content-Type: application/json; charset=utf-8

## Subscribe user & Unsubscribe user [/v1/user/subscribing]

PUT - Subscribe user (Subscribe someone)

+ Request Parameter

    + header: `Authorization` (string) required - Login Token (allow empty)
    + header: `other` (integer) not required - other header (not empty)
    + formData: `to` (integer) required - user id (not empty)
    + formData: `to2` (integer) required - user id (not empty)

+ Response 400

    + "request param error", "request format error"

+ Response 401

    + authorization failed, token has expired

+ Response 404

    + "user not found"

+ Response 500

    + "subscribe failed"

DELETE - Unsubscribe user

+ Request Parameter

    + header: `Authorization` (string) required - Login Token (allow empty)
    + formData: `to` (integer) required - user id (not empty)

+ Response 200 Body

    See Result

+ Response 400

    + "request param error", "request format error"

+ Response 400 Body

    See Result

+ Response 401

    + authorization failed, token has expired

+ Response 404

    + "user not found"

+ Response 500

    + "unsubscribe failed"

+ Response 500 Body

    See Result

### Subscribe user [PUT]

+ Request 200

    + Headers

            a: b
            Content-Type: application/json

    + Body

            {
                "c": "d",
                "e": "f"
            }

+ Response 200

    + Headers

            Content-Type: application/json; charset=utf-8

    + Body

            {
                "code": 200,
                "message": "success",
                "data": [
                    {
                        "content": "123"
                    },
                    {
                        "content": "456"
                    }
                ]
            }

+ Response 400

    + Headers

            Content-Type: application/json; charset=utf-8

+ Response 401

    + Headers

            Content-Type: application/json; charset=utf-8

+ Response 404

    + Headers

            Content-Type: application/json; charset=utf-8

+ Response 500

    + Headers

            Content-Type: application/json; charset=utf-8

### Unsubscribe user [DELETE]

+ Response 200

    + Headers

            Content-Type: application/json; charset=utf-8

+ Response 400

    + Headers

            Content-Type: application/json; charset=utf-8

    + Body

            {
                "code": 400,
                "message": "request param error"
            }

+ Response 401

    + Headers

            Content-Type: application/json; charset=utf-8

+ Response 404

    + Headers

            Content-Type: application/json; charset=utf-8

+ Response 500

    + Headers

            Content-Type: application/json; charset=utf-8

    + Body

            {
                "code": 500,
                "message": "unsubscribe failed"
            }

# Group Authorization

## Login [/v1/auth/login]

POST - Login

+ Request Parameter

    + body: `param` (LoginParam) required - login param (not empty)

+ Response 200

    + "OK"

### Login [POST]

+ Response 200

    + Headers

            Content-Type: application/json; charset=utf-8

    + Body

            {
                "code": 200,
                "message": "success",
                "data": {
                    "count": 1,
                    "page": 1,
                    "data": [
                        {
                            "uid": 1,
                            "username": "TestUserName",
                            "profile": "TestProfile"
                        }
                    ]
                }
            }
